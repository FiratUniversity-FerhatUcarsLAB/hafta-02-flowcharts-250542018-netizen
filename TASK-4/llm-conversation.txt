//ben
“Universite ders kayıt sisteminin genel akısını acıkla: giris, ders listesi, ders 
secimi, kontroller, onaylama.” “Ders kaydında yapılması gereken kontrolleri listele: kontenjan, on kosul,
zaman ¸cakısması, kredi limiti, danı¸sman onayı.” “Tum bu kontrollerle birlikte detaylı pseudocode yaz. 
Ic ice EGER- ˘ 
ISE
yapıları ve donguler kullan.” bunu üniverste öğrencisinin anlayacağı şekilde yaz.

//llm

Harika bir soru! Üniversite hayatının en heyecanlı ve bazen de en stresli anlarından biri olan ders kaydını, bir öğrencinin gözünden adım adım ve teknik detaylarıyla birlikte inceleyelim.

Bunu bir online alışveriş gibi düşünebilirsin. Mağazaya girersin (sisteme giriş), ürünleri incelersin (ders listesi), beğendiklerini sepete atarsın (ders seçimi), kasaya gittiğinde sistem stok, bakiye gibi kontroller yapar (kontroller) ve son olarak ödemeyi tamamlayıp siparişi verirsin (onaylama).

Üniversite Ders Kayıt Sisteminin Genel Akışı
İşte bu "alışverişin" adımları:

1. Giriş (Mağazaya Girmek)
Bu en basit adım. Öğrenci numaran ve şifrenle, üniversitenin Öğrenci Bilgi Sistemi'ne (ÖBS) giriş yaparsın. Bu, sisteme kim olduğunu tanıtma işlemidir.

2. Ders Listesi (Ürün Katalogu)
Giriş yaptıktan sonra karşına o dönem açılan tüm derslerin listesi çıkar. Bu listede genellikle şu bilgiler yer alır:

Ders Kodu: (örn: "BLM-101")

Ders Adı: (örn: "Bilgisayar Programlamaya Giriş")

Kredi: Dersin akademik yükünü belirten sayı.

Öğretim Üyesi: Dersi kimin verdiği.

Kontenjan: Derse kaç kişinin kaydolabileceği (örn: 50/60 - 60 kişilik yerin 50'si dolu demek).

Ders Programı: Hangi gün ve saatte olduğu.

3. Ders Seçimi (Sepete Ekleme)
Bu katalogdan, kendi bölümünün müfredatına ve ilgi alanlarına göre almak istediğin dersleri seçersin. Genellikle dersin yanındaki "Ekle" veya "+" butonuna basarak dersleri geçici bir listeye, yani "ders sepetine" eklersin. Bu aşama henüz kaydın tamamlandığı anlamına gelmez, sadece bir ön seçimdir.

4. Kontroller (Kasa Kontrolü)
İşte sihrin gerçekleştiği yer burası! Sen dersleri sepetine ekledikçe veya "Kaydı Tamamla" butonuna basmaya çalıştığında, sistem arka planda bir dizi kontrol yaparak seçtiğin derslerin kurallara uygun olup olmadığını denetler. Eğer bir sorun varsa sana uyarı verir. (Bu kontrolleri aşağıda detaylı listeleyeceğiz).

5. Onaylama (Siparişi Vermek)
Tüm kontrollerden başarıyla geçtin ve sepetindeki derslerden eminsin.

Öğrenci Onayı: Genellikle "Kesinleştir" veya "Onayla" gibi bir butona basarak seçimlerini nihaîleştirirsin.

Danışman Onayı: Sen kesinleştirdikten sonra, bu ders listesi akademik danışmanının onayına gider. Danışmanın, seçtiğin derslerin mezuniyet planına uygun olup olmadığını kontrol eder. Danışman onay verince ders kaydın %100 tamamlanmış olur. Eğer danışman bir dersi uygun görmezse, kaydını reddedip düzeltme istemek için sana geri gönderebilir.

Ders Kaydında Yapılması Gereken Kontroller
Sistemin "Kasa Kontrolü" adımında yaptığı denetimler şunlardır:

Kontenjan Kontrolü:

Ne Yapar? Seçtiğin dersin kontenjanının dolup dolmadığını kontrol eder.

Neden Gerekli? Bir sınıftaki fiziksel yer (sıra sayısı) veya bir hocanın verimli şekilde ilgilenebileceği öğrenci sayısı sınırlıdır. Kontenjan doluysa, o derse kaydolamazsın.

Ön Koşul Kontrolü (Prerequisite Check):

Ne Yapar? Almak istediğin bir dersin "ön koşulu" olup olmadığına bakar. Ön koşul, o dersi alabilmek için daha önceki dönemlerde başarıyla tamamlamış olman gereken bir derstir. Örneğin, "Veri Yapıları" dersini almak için "Programlamaya Giriş" dersinden geçmiş olman gerekebilir.

Neden Gerekli? Derslerin belirli bir bilgi birikimi üzerine inşa edilmesini sağlar. Temeli olmayan bir öğrencinin ileri seviye bir derste zorlanmasını engeller.

Zaman Çakışması Kontrolü (Time Conflict Check):

Ne Yapar? Seçtiğin iki veya daha fazla dersin aynı gün ve aynı saate denk gelip gelmediğini kontrol eder.

Neden Gerekli? Aynı anda iki farklı derste fiziksel olarak bulunamayacağın için sistem bu durumu engeller.

Kredi Limiti Kontrolü:

Ne Yapar? Bir dönemde alabileceğin maksimum toplam krediyi aşıp aşmadığını kontrol eder. Örneğin, bir dönemde en fazla 30 kredi almana izin veriliyorsa, seçtiğin derslerin toplam kredisi 30'u geçemez.

Neden Gerekli? Öğrencilerin kaldırabileceklerinden fazla ders alarak akademik başarılarını riske atmalarını önlemek içindir.

Danışman Onayı:

Ne Yapar? Bu aslında sistemin değil, sürecin bir kontrolüdür. Öğrencinin yaptığı kaydın mantıksal ve akademik olarak doğru olup olmadığını denetleyen insan kontrolüdür.

Neden Gerekli? Yanlış bir ders seçimi (örneğin, zorunlu bir dersi almayı unutmak) mezuniyetini geciktirebilir. Danışman, bu tür hataları önlemek için son bir güvencedir.

Detaylı Pseudocode (Sözde Kod)
Aşağıdaki kod, bir bilgisayar programı gibi yazılmıştır ama herkesin anlayacağı basit bir dille süreci anlatır. Bu, sistemin arka planda nasıl düşündüğünü gösterir.

BAŞLA:

//--- Değişkenleri ve öğrenci bilgilerini hazırla ---
ogrenci = Mevcut_Ogrenci_Bilgilerini_Getir()
ogrenci_transkripti = ogrenci.Transkriptini_Getir()
donem_dersleri = Acilan_Tum_Dersleri_Listele()
ders_sepeti = BOS_LISTE
mevcut_kredi = 0
kredi_limiti = 30 // Üniversitenin belirlediği limit

//--- Öğrenci ders seçimi yapmaya başlar ---
DÖNGÜ (öğrenci "Ders Seçimini Bitir" butonuna basana kadar):

    secilecek_ders = ogrenci.Sectigi_Dersi_Getir() // Öğrenci listeden bir derse tıklar

    //--- KONTROL 1: KREDİ LİMİTİ ---
    EĞER (mevcut_kredi + secilecek_ders.kredi > kredi_limiti) ISE:
        Hata_Goster("Maksimum kredi limitini aşıyorsun!")
        DÖNGÜYE_DEVAM_ET // Bu dersi ekleme, sonraki seçimi bekle
    DEGILSE:
        // Kredi limiti sorunu yok, diğer kontrollere geç

        //--- KONTROL 2: KONTENJAN ---
        EĞER (secilecek_ders.dolu_kontenjan >= secilecek_ders.toplam_kontenjan) ISE:
            Hata_Goster("Bu dersin kontenjanı dolu!")
            DÖNGÜYE_DEVAM_ET
        DEGILSE:
            // Kontenjan sorunu yok, devam et

            //--- KONTROL 3: ÖN KOŞUL ---
            on_kosul_sorunu_var_mi = HAYIR
            EĞER (secilecek_ders.on_kosulu_var_mi) ISE:
                on_kosul_dersi = secilecek_ders.On_Kosulunu_Getir()
                EĞER (ogrenci_transkripti.Bu_Dersi_Basariyla_Gecti_Mi(on_kosul_dersi) == HAYIR) ISE:
                    Hata_Goster("Bu dersi alabilmek için önce '" + on_kosul_dersi.adi + "' dersini başarmalısın!")
                    on_kosul_sorunu_var_mi = EVET
                BITIR_EĞER
            BITIR_EĞER

            EĞER (on_kosul_sorunu_var_mi) ISE:
                DÖNGÜYE_DEVAM_ET
            DEGILSE:
                // Ön koşul sorunu yok, devam et

                //--- KONTROL 4: ZAMAN ÇAKIŞMASI ---
                cakisma_var_mi = HAYIR
                // Sepetteki mevcut her dersle yeni dersi karşılaştır
                DÖNGÜ (sepetteki_her_ders IÇIN ders_sepeti):
                    EĞER (secilecek_ders.zamani == sepetteki_her_ders.zamani) ISE:
                        Hata_Goster("'" + secilecek_ders.adi + "' dersi, '" + sepetteki_her_ders.adi + "' dersiyle çakışıyor!")
                        cakisma_var_mi = EVET
                        DÖNGÜYÜ_KIR // Başka dersle karşılaştırmaya gerek yok
                    BITIR_EĞER
                BITIR_DÖNGÜ

                EĞER (cakisma_var_mi) ISE:
                    DÖNGÜYE_DEVAM_ET
                DEGILSE:
                    // --- TÜM KONTROLLER BAŞARILI ---
                    // Tebrikler! Hiçbir sorun yok, dersi sepete ekle.
                    ders_sepeti.Ekle(secilecek_ders)
                    mevcut_kredi = mevcut_kredi + secilecek_ders.kredi
                    Mesaj_Goster("'" + secilecek_ders.adi + "' sepete eklendi. Toplam Kredi: " + mevcut_kredi)
                BITIR_EĞER // Çakışma kontrolü sonu
            BITIR_EĞER // Ön koşul kontrolü sonu
        BITIR_EĞER // Kontenjan kontrolü sonu
    BITIR_EĞER // Kredi limiti kontrolü sonu

BITIR_DÖNGÜ // Öğrenci ders seçimini bitirdi

//--- SON ADIM: ONAYLAMA ---
EĞER (öğrenci "Kaydı Tamamla" butonuna basarsa):
    Danisman_Onayina_Gonder(ders_sepeti)
    Bilgi_Ver("Ders kaydınız danışman onayına gönderilmiştir.")
DEGILSE:
    Bilgi_Ver("Ders kaydı iptal edildi.")
BITIR_EĞER

BİTİR.

//ben

“Bu pseudocode’u Graphviz DOT diline cevir. Her kontrol noktasını
diamond ile goster.”

//llm

Graphviz DOT Kodu
Aşağıdaki kod, ders kayıt sisteminin mantıksal akışını tanımlar:

Dikdörtgenler: Yapılan işlemleri gösterir.

Eşkenar Dörtgenler (Diamond): "EĞER-İSE" gibi kontrol ve karar noktalarını temsil eder.

Oklar: Akışın yönünü belirtir.

Kod snippet'i

digraph DersKayitSistemiAkisi {
    // Grafik için genel ayarlar
    graph [charset="UTF-8", rankdir=TB, splines=ortho, labelloc="t", label="Üniversite Ders Kayıt Sistemi Akış Şeması"];
    node [shape=box, style="rounded,filled", fillcolor="#E3F2FD", fontname="Arial"];
    edge [fontname="Arial", fontsize=10];

    // Başlangıç ve Bitiş Düğümleri
    Basla [label="Başla", shape=ellipse, style=filled, fillcolor="#C8E6C9"];
    Son [label="Süreç Tamamlandı", shape=ellipse, style=filled, fillcolor="#FFCDD2"];

    // Ana İşlem Adımları
    Giris [label="Öğrenci Sisteme Giriş Yapar"];
    DersListesi [label="Açılan Dersler Listelenir"];
    DersSec [label="Öğrenci Ders Seçer"];
    SepeteEkle [label="Ders Başarıyla 'Ders Sepetine' Eklenir", style=filled, fillcolor="#A5D6A7"];
    KaydiGonder [label="Kayıt Danışman Onayına Gönderilir"];
    HataGoster [label="Hata Mesajı Gösterilir\n(Öğrenci bilgilendirilir)", style=filled, fillcolor="#EF9A9A"];

    // Kontrol Noktaları (Karar Mekanizmaları)
    KrediLimiti_Kontrol [label="Kredi Limiti Aşıldı mı?", shape=diamond, style=filled, fillcolor="#FFF9C4"];
    Kontenjan_Kontrol [label="Kontenjan Dolu mu?", shape=diamond, style=filled, fillcolor="#FFF9C4"];
    OnKosul_Kontrol [label="Ön Koşul Sağlanıyor mu?", shape=diamond, style=filled, fillcolor="#FFF9C4"];
    Cakisma_Kontrol [label="Zaman Çakışması Var mı?", shape=diamond, style=filled, fillcolor="#FFF9C4"];
    Onay_Kontrol [label="Kayıt Tamamlanıp\nOnaya Gönderilsin mi?", shape=diamond, style=filled, fillcolor="#BBDEFB"];


    // Akışın Tanımlanması (Oklar)
    Basla -> Giris;
    Giris -> DersListesi;
    
    // Ders listesinden sonra öğrencinin iki seçeneği var: ya yeni ders seçer ya da kaydı tamamlar.
    DersListesi -> Onay_Kontrol;
    Onay_Kontrol -> DersSec [label=" Hayır, yeni ders seçeceğim "];
    
    // Ders seçimi sonrası başlayan kontrol zinciri
    DersSec -> KrediLimiti_Kontrol;
    KrediLimiti_Kontrol -> Kontenjan_Kontrol [label=" Hayır "];
    KrediLimiti_Kontrol -> HataGoster [label=" Evet "];
    
    Kontenjan_Kontrol -> OnKosul_Kontrol [label=" Hayır "];
    Kontenjan_Kontrol -> HataGoster [label=" Evet "];

    OnKosul_Kontrol -> Cakisma_Kontrol [label=" Evet (Sağlanıyor) "];
    OnKosul_Kontrol -> HataGoster [label=" Hayır (Sağlanmıyor) "];

    Cakisma_Kontrol -> SepeteEkle [label=" Hayır (Çakışma Yok) "];
    Cakisma_Kontrol -> HataGoster [label=" Evet (Çakışma Var) "];
    
    // Başarılı veya başarısız denemelerden sonra öğrenci tekrar ders listesine döner.
    SepeteEkle -> DersListesi [label=" Listeye Dön "];
    HataGoster -> DersListesi [label=" Listeye Dön "];
    
    // Öğrenci kaydı tamamlama kararı alırsa
    Onay_Kontrol -> KaydiGonder [label=" Evet "];
    KaydiGonder -> Son;
}

